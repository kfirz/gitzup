// Code generated by go-bindata. DO NOT EDIT.
// sources:
// internal/agent/assets/build.request.json (587B)
// internal/agent/assets/build.response.json (248B)
// internal/agent/assets/resource.json (611B)
// internal/agent/assets/schemas.go (999B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _internalAgentAssetsBuildRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x31\x4f\xc3\x30\x10\x85\x77\xff\x8a\x93\x61\xc4\x71\x99\x10\xdd\xba\x33\x74\xa6\xaa\x90\x1b\x5f\x1a\x57\x69\x6c\xec\x0b\x12\xad\xf2\xdf\x91\xcf\xa4\x0a\xb4\x52\x17\x47\x79\xf7\xbd\xa7\x7b\xba\xb3\x00\x90\x8f\xa9\x6e\xf1\x68\xe4\x12\x64\x4b\x14\x96\x5a\x1f\x92\xef\x55\x51\x2b\x1f\xf7\xda\x46\xd3\x90\x5a\xbc\xe8\xa2\x3d\xc8\x27\xf6\x39\x3b\xf3\xec\x1d\x9d\x86\x50\xd5\xfe\xf8\x4b\xe9\xaf\x67\xbd\x1b\x5c\x67\xab\x88\x9f\x03\x26\xaa\x72\x6c\xb1\x5a\x4c\x75\x74\x81\x9c\xef\x73\xc4\x0a\x18\x84\x09\x2c\x10\x7d\x07\xcc\x53\xbf\x3b\x60\x4d\x45\x33\xd6\xba\xec\x32\xdd\x3a\xfa\x80\x91\x1c\x26\xb9\x84\xc6\x74\x09\x19\xc8\x11\x2e\x62\xde\x6c\x23\x00\x58\x49\x7e\x88\x35\x26\x29\x00\xb6\x0c\x85\xb9\xf7\xfc\x1f\x9b\xa4\xeb\x3d\xdf\x5c\x22\xf0\x0d\x5c\x58\x20\x0f\x3b\x04\x13\x42\xe7\xd0\x82\x49\x10\x4c\x64\x84\x5a\x97\x6e\xb5\xe2\xd8\x1b\xcd\x58\xbf\xd7\x8e\xa1\x60\x88\x30\xf6\xeb\xeb\x0e\x3c\xde\x18\x75\xda\xe6\x67\xa5\xde\x17\xea\xf5\x43\xf1\xcf\xf6\x0f\x94\x8f\x17\xb1\xb9\x77\xbd\xa9\x66\x39\xdc\xc5\x3d\x8a\xf9\x37\xbf\xa3\x18\xc5\x4f\x00\x00\x00\xff\xff\x67\x9b\xd4\x88\x4b\x02\x00\x00")

func internalAgentAssetsBuildRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_internalAgentAssetsBuildRequestJson,
		"internal/agent/assets/build.request.json",
	)
}

func internalAgentAssetsBuildRequestJson() (*asset, error) {
	bytes, err := internalAgentAssetsBuildRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/agent/assets/build.request.json", size: 587, mode: os.FileMode(420), modTime: time.Unix(1543071582, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbb, 0x99, 0x7e, 0x1a, 0x3d, 0x88, 0x7b, 0xf2, 0xe8, 0x1d, 0xa7, 0xe6, 0x27, 0xc0, 0xf8, 0x7f, 0xf8, 0x37, 0xd2, 0xa3, 0x78, 0x33, 0x94, 0xf9, 0x4d, 0x53, 0x3, 0xaf, 0x10, 0x85, 0xed, 0xa0}}
	return a, nil
}

var _internalAgentAssetsBuildResponseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x31\x8e\x83\x30\x10\x45\x7b\x4e\x61\x79\xb7\x5c\xec\xdd\x6a\x25\xba\xdc\x20\x7d\x94\xc2\xd8\x03\x0c\x02\xec\x8c\x87\x48\x09\xe2\xee\x91\xed\x28\xa2\x7d\xf3\xde\xd7\x6c\x95\x10\xf2\x3b\xda\x01\x66\x23\x1b\x21\x07\xe6\xd0\x68\x3d\x46\xbf\xd4\x85\x2a\x4f\xbd\x76\x64\x3a\xae\x7f\xff\x75\x61\x5f\xf2\x27\x77\xe8\x0e\x4d\x8f\xfc\x5c\x83\xb2\x7e\x7e\x5b\xfa\xfe\xa7\xdb\x15\x27\xa7\x08\x62\xf0\x4b\x04\x95\x76\x4b\xeb\x20\x5a\xc2\xc0\xe8\x97\xb4\x71\x12\xd9\x14\x1f\xb3\x58\xfc\x08\x90\xce\xbe\x1d\xc1\x72\x61\xc6\x39\x4c\x99\x99\xce\xe4\x03\x10\x23\x44\xd9\x88\xce\x4c\x11\xb2\x40\x70\x5b\x91\x20\xfd\x76\xb9\x66\x12\x8e\xe2\xb6\x57\x7b\xf5\x0a\x00\x00\xff\xff\xfd\xbe\x61\xb7\xf8\x00\x00\x00")

func internalAgentAssetsBuildResponseJsonBytes() ([]byte, error) {
	return bindataRead(
		_internalAgentAssetsBuildResponseJson,
		"internal/agent/assets/build.response.json",
	)
}

func internalAgentAssetsBuildResponseJson() (*asset, error) {
	bytes, err := internalAgentAssetsBuildResponseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/agent/assets/build.response.json", size: 248, mode: os.FileMode(420), modTime: time.Unix(1543071582, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x99, 0x94, 0x8f, 0xdb, 0xd, 0xce, 0xe8, 0xba, 0x1d, 0x19, 0x11, 0x6a, 0x57, 0x44, 0x41, 0x39, 0x48, 0xf1, 0xa7, 0x65, 0xa3, 0x79, 0x23, 0x29, 0x9e, 0xfa, 0xf6, 0xd3, 0x4f, 0x3, 0x82, 0xec}}
	return a, nil
}

var _internalAgentAssetsResourceJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x4b\xf4\x30\x10\x86\xef\xfd\x15\x43\xbe\xef\xa0\xe0\xb6\x8a\x07\xa1\x37\xc1\xa3\x07\x11\x6f\xe2\x21\xa6\xd3\x74\xd6\x6d\x12\x27\x13\x51\x97\xfd\xef\x92\xc6\xee\x76\x11\xc1\x43\x0f\x7d\xe7\x79\xd3\xa7\x93\x6d\x05\xa0\xfe\x47\x33\xe0\xa8\x55\x0b\x6a\x10\x09\x6d\xd3\xac\xa3\x77\xab\x92\xd6\x9e\x6d\xd3\xb1\xee\x65\x75\x7e\xd5\x94\xec\x9f\x3a\x9b\x7a\xd4\x2d\x3a\x96\xe4\x33\x85\xda\xf8\xf1\x9b\x6a\xde\x2e\x1a\xc6\xe8\x13\x1b\xac\xf3\x89\xa5\xd5\x61\x34\x4c\x41\xc8\xbb\xdc\xbe\x86\x99\x81\x18\xd0\x50\x4f\x46\xe7\x59\x5d\x68\xf9\x08\x98\x31\xff\xbc\x46\x23\x25\xd3\x5d\x47\x19\xd1\x9b\x3b\xf6\x01\x59\x08\xa3\x6a\xa1\xd7\x9b\x88\x13\xc0\xf8\x9a\x88\x31\xdb\x3d\x56\x00\xf3\x31\x15\xc0\xd3\x34\x0f\xcb\xda\x76\x41\xcc\x6f\x3f\x35\xef\x67\xc9\xcc\xd5\xf0\x30\x50\x04\x8a\xa0\xe1\xc6\x9b\x17\x64\xa0\x51\x5b\x04\xc6\x1e\x19\x9d\x41\x38\x21\x67\x36\xa9\x23\x67\x41\x06\x04\xd1\xf6\xb4\xfc\xd1\xf2\x63\x2a\x0a\x93\xb3\x87\x7c\x24\x77\x8b\xce\xca\xa0\x5a\xb8\x9c\xc2\x5d\x99\x29\xe3\x5d\x4f\xf6\x2f\x82\x85\x4c\x5c\xb6\xb8\x37\x8d\xe8\x04\xc4\x4f\x36\xfb\x8d\x1f\xc9\x7b\x07\xf8\x8e\x26\x1d\xb6\x7f\xe4\xba\xb8\x81\x29\xff\xe5\x16\x84\x13\x16\xf3\x2a\x3f\xbb\xea\x2b\x00\x00\xff\xff\x3c\x78\xdd\xfa\x63\x02\x00\x00")

func internalAgentAssetsResourceJsonBytes() ([]byte, error) {
	return bindataRead(
		_internalAgentAssetsResourceJson,
		"internal/agent/assets/resource.json",
	)
}

func internalAgentAssetsResourceJson() (*asset, error) {
	bytes, err := internalAgentAssetsResourceJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/agent/assets/resource.json", size: 611, mode: os.FileMode(420), modTime: time.Unix(1543071582, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0x59, 0x5a, 0x89, 0x5f, 0x8, 0xc6, 0x2f, 0x5a, 0x3e, 0xee, 0x68, 0xe3, 0x63, 0x97, 0x90, 0x87, 0xb9, 0x84, 0x2d, 0x7f, 0x3a, 0xe, 0xba, 0x3, 0x49, 0xdf, 0x70, 0x87, 0xc8, 0xb8, 0xce}}
	return a, nil
}

var _internalAgentAssetsSchemasGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd1\xb1\x6e\x83\x30\x10\x06\xe0\xb9\x7e\x8a\x13\x53\xa8\x2a\xfc\x04\x1d\xd2\xa5\xaa\xd4\x29\x7d\x02\xc7\xb9\x10\x37\xe1\x4c\xcf\xe7\x0e\xa9\xf2\xee\x95\x30\xa4\x01\x12\x41\xc3\x08\xf8\xfb\xcf\xf7\xd7\xc6\xee\x4d\x89\x60\x42\x40\x09\x4a\xb9\xaa\xf6\x2c\xb0\x50\x0f\xd6\x57\x95\xa7\x65\xf3\x1e\xb2\xd2\xc9\x2e\xae\x0b\xeb\x2b\xbd\xdf\x3a\x3e\xea\xd2\xc9\x31\xd6\xda\x91\x20\x93\x39\xe8\xf4\xbb\x4e\x4e\xa6\x72\xa5\xbe\x0d\x03\x63\xf0\x91\x2d\x7e\xd8\x1d\x56\x06\x9e\xe1\x52\x2d\xde\xbd\xd9\xa4\x2f\x8b\xec\x0c\x99\x12\x49\x5a\x47\x77\xe7\x8b\xcf\xe0\x29\xcb\x1b\x73\x1d\xdd\x61\xb3\xc2\xaf\x88\x41\xee\x75\x1b\xa3\xe0\x84\x24\xfc\x09\xfe\x3f\x43\xa8\x3d\x85\xbb\x2f\xd7\x0d\x91\x94\x8e\x57\xdb\x48\x16\x5e\x51\x56\x6d\xee\xd2\x8a\xf3\xd4\x52\x39\x3c\xf6\x52\xda\xec\xf4\xfc\x00\xa3\x44\xa6\xfe\x20\xb7\xa9\xd3\x28\x6b\x4e\xca\x20\x6b\x50\xf1\x9f\xf9\x32\xea\x69\xca\x3d\x9b\x57\x2a\x1e\xb9\x97\xbb\x9f\x80\x87\x6e\xaf\xb6\xf1\x12\xde\xc8\xc9\xbc\xb9\x27\x17\x7e\x8d\xba\x15\x38\xe7\x42\x33\x03\x07\xd4\x49\xfd\x06\x00\x00\xff\xff\x88\x09\x20\xeb\xe7\x03\x00\x00")

func internalAgentAssetsSchemasGoBytes() ([]byte, error) {
	return bindataRead(
		_internalAgentAssetsSchemasGo,
		"internal/agent/assets/schemas.go",
	)
}

func internalAgentAssetsSchemasGo() (*asset, error) {
	bytes, err := internalAgentAssetsSchemasGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/agent/assets/schemas.go", size: 999, mode: os.FileMode(420), modTime: time.Unix(1543078992, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8a, 0x1b, 0x34, 0x2f, 0x73, 0x21, 0x74, 0x97, 0xf5, 0x74, 0x5a, 0x4f, 0x8a, 0x60, 0x6, 0xcd, 0xc1, 0x0, 0xd, 0x1c, 0x6f, 0x1d, 0x46, 0x42, 0xff, 0x9, 0x56, 0x88, 0x71, 0xad, 0x2a, 0x75}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"internal/agent/assets/build.request.json": internalAgentAssetsBuildRequestJson,

	"internal/agent/assets/build.response.json": internalAgentAssetsBuildResponseJson,

	"internal/agent/assets/resource.json": internalAgentAssetsResourceJson,

	"internal/agent/assets/schemas.go": internalAgentAssetsSchemasGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"internal": &bintree{nil, map[string]*bintree{
		"agent": &bintree{nil, map[string]*bintree{
			"assets": &bintree{nil, map[string]*bintree{
				"build.request.json":  &bintree{internalAgentAssetsBuildRequestJson, map[string]*bintree{}},
				"build.response.json": &bintree{internalAgentAssetsBuildResponseJson, map[string]*bintree{}},
				"resource.json":       &bintree{internalAgentAssetsResourceJson, map[string]*bintree{}},
				"schemas.go":          &bintree{internalAgentAssetsSchemasGo, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
